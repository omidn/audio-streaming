{"version":3,"file":"static/webpack/static/development/pages/index.js.4cb09bf3c09b1aa6fb07.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\nexport default class extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsrc: ''\n\t\t}\n\t}\n\t\n\tonClickHandler = async () =>  {\n\t\tconst res = await fetch('http://localhost:3001/m2');\n\t\tconst json = await res.json();\n\t\t// binary\n\t\tconst buffer = json.data;\n\t\tconst bytes = new Array(buffer.length);\n\t\tfor (let i = 0; i < buffer.length; i++) {\n\t\t\tbytes[i] = buffer.charCodeAt(i);\n\t\t}\n\t\tconst blob = new Blob([new Uint8Array(bytes)], { type: 'audio/wav' });\n\n\t\t// base64\n\t\t/* const buffer = atob(base64);\n\t\t\t var bytes = new Array(buffer.length);\n\t\t\t for (var i = 0; i < buffer.length; i++) {\n\t\t\t bytes[i] = buffer.charCodeAt(i);\n\t\t\t }\n\t\t\t console.log(new Uint8Array(bytes));\n\t\t\t const blob = new Blob([new Uint8Array(bytes)], { type: 'audio/wav' });\n\t\t\t console.log('blob', blob); */\n\n\t\t/* const blob = new Blob(json.data.data, { type: 'audio/wav' });  */\n\t\t\n\t\ttry {\n\t\t\tconst url = window.URL.createObjectURL(blob);\n\t\t\tthis.setState({ src: url }, () => this.audio.play());\n\t\t} catch(err) {\n\t\t\tconsole.log('err', err);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<h1>Welcome to next.js!</h1>\n\t\t\t\t<audio ref={e => this.audio = e} controls src={this.state.src} />\n\t\t\t\t<button onClick={this.onClickHandler.bind(this)}>Click here</button>\n\t\t\t</section>\n\t\t);\n\t}\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AADA;AAFA;AAKA;AACA;;;AAgCA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA/CA;AACA;;AA+CA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}